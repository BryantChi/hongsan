{
    "sourceFile": "app/Http/Controllers/Admin/NewsInfoController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753258900519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753258900519,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Requests\\Admin\\CreateNewsInfoRequest;\nuse App\\Http\\Requests\\Admin\\UpdateNewsInfoRequest;\nuse App\\Repositories\\Admin\\NewsInfoRepository;\nuse App\\Http\\Controllers\\AppBaseController;\nuse Illuminate\\Http\\Request;\nuse Flash;\nuse Intervention\\Image\\Facades\\Image;\nuse Illuminate\\Support\\Facades\\File;\nuse Illuminate\\Support\\Str;\nuse Response;\n\nclass NewsInfoController extends AppBaseController\n{\n    /** @var NewsInfoRepository $newsInfoRepository*/\n    private $newsInfoRepository;\n\n    public function __construct(NewsInfoRepository $newsInfoRepo)\n    {\n        $this->newsInfoRepository = $newsInfoRepo;\n    }\n\n    /**\n     * Display a listing of the NewsInfo.\n     *\n     * @param Request $request\n     *\n     * @return Response\n     */\n    public function index(Request $request)\n    {\n        $newsInfos = $this->newsInfoRepository->paginate(10);\n\n        return view('admin.news_infos.index')\n            ->with('newsInfos', $newsInfos);\n    }\n\n    /**\n     * Show the form for creating a new NewsInfo.\n     *\n     * @return Response\n     */\n    public function create()\n    {\n        // 取得系統支援的語系\n        $locales = config('translatable.locales');\n\n        return view('admin.news_infos.create', compact('locales'));\n    }\n\n    /**\n     * Store a newly created NewsInfo in storage.\n     *\n     * @param CreateNewsInfoRequest $request\n     *\n     * @return Response\n     */\n    public function store(CreateNewsInfoRequest $request)\n    {\n        $input = $request->all();\n\n        // 處理圖片\n        if ($request->hasFile('cover_front_image')) {\n            // 使用共用的圖片處理函式\n            $input['cover_front_image'] = $this->processImage($request->file('cover_front_image'), 'cover_front_image');\n        } else {\n            // 如果沒有上傳圖片，則設置為空字符串\n            $input['cover_front_image'] = '';\n        }\n\n        // 處理多語系內容\n        $translationData = [];\n        $locales = config('translatable.locales');\n\n        foreach ($locales as $locale) {\n            if (isset($input[$locale])) {\n                $translationData[$locale] = $input[$locale];\n                unset($input[$locale]); // 移除以免影響主表資料\n            }\n        }\n\n        // 建立主記錄\n        $newsInfo = $this->newsInfoRepository->create($input);\n\n        // 儲存翻譯資料\n        foreach ($translationData as $locale => $translation) {\n            $newsInfo->translateOrNew($locale)->fill($translation);\n        }\n        $newsInfo->save();\n\n        Flash::success('最新消息資訊新增成功。');\n\n        return redirect(route('admin.newsInfos.index'));\n    }\n\n    /**\n     * Display the specified NewsInfo.\n     *\n     * @param int $id\n     *\n     * @return Response\n     */\n    public function show($id)\n    {\n        $newsInfo = $this->newsInfoRepository->find($id);\n\n        if (empty($newsInfo)) {\n            Flash::error('找不到最新消息資訊');\n\n            return redirect(route('admin.newsInfos.index'));\n        }\n\n        return view('admin.news_infos.show')->with('newsInfo', $newsInfo);\n    }\n\n    /**\n     * Show the form for editing the specified NewsInfo.\n     *\n     * @param int $id\n     *\n     * @return Response\n     */\n    public function edit($id)\n    {\n        $newsInfo = $this->newsInfoRepository->find($id);\n\n        if (empty($newsInfo)) {\n            Flash::error('找不到最新消息資訊');\n\n            return redirect(route('admin.newsInfos.index'));\n        }\n\n        // 取得系統支援的語系\n        $locales = config('translatable.locales');\n\n        return view('admin.news_infos.edit', compact('newsInfo', 'locales'));\n    }\n\n    /**\n     * Update the specified NewsInfo in storage.\n     *\n     * @param int $id\n     * @param UpdateNewsInfoRequest $request\n     *\n     * @return Response\n     */\n    public function update($id, UpdateNewsInfoRequest $request)\n    {\n        $newsInfo = $this->newsInfoRepository->find($id);\n\n        if (empty($newsInfo)) {\n            Flash::error('找不到最新消息資訊');\n\n            return redirect(route('admin.newsInfos.index'));\n        }\n\n        $input = $request->all();\n\n        if ($request->hasFile('cover_front_image')) {\n            $input['cover_front_image'] = $this->handleImageUpload($request->file('cover_front_image'), $newsInfo['cover_front_image'], 'cover_front_image');\n        }\n\n        // 處理多語系資料\n        $translationData = [];\n        $locales = config('translatable.locales');\n\n        foreach ($locales as $locale) {\n            if (isset($input[$locale])) {\n                $translationData[$locale] = $input[$locale];\n                unset($input[$locale]); // 移除以免影響主表資料\n            }\n        }\n\n        // 更新主記錄\n        $newsInfo = $this->newsInfoRepository->update($input, $id);\n\n        // 更新翻譯資料\n        foreach ($translationData as $locale => $translation) {\n            $newsInfo->translateOrNew($locale)->fill($translation);\n        }\n        $newsInfo->save();\n\n        Flash::success('最新消息資訊更新成功。');\n\n        return redirect(route('admin.newsInfos.index'));\n    }\n\n    /**\n     * Remove the specified NewsInfo from storage.\n     *\n     * @param int $id\n     *\n     * @throws \\Exception\n     *\n     * @return Response\n     */\n    public function destroy($id)\n    {\n        $newsInfo = $this->newsInfoRepository->find($id);\n\n        if (empty($newsInfo)) {\n            Flash::error('找不到最新消息資訊');\n\n            return redirect(route('admin.newsInfos.index'));\n        }\n\n        // 刪除圖片\n        if (!empty($newsInfo->cover_front_image) && File::exists(public_path('uploads/' . $newsInfo->cover_front_image))) {\n            File::delete(public_path('uploads/' . $newsInfo->cover_front_image));\n        }\n\n        $this->newsInfoRepository->delete($id);\n\n        Flash::success('最新消息資訊刪除成功。');\n\n        return redirect(route('admin.newsInfos.index'));\n    }\n\n    // 共用的圖片處理函式\n    function processImage($image, $uploadDir, $resizeWidth = 800, $quality = 75)\n    {\n        if ($image) {\n            $path = public_path('uploads/images/' . $uploadDir) . '/';\n            $filename = time() . '_' . $image->getClientOriginalName();\n\n            if (!file_exists($path)) {\n                mkdir($path, 0755, true);\n            }\n\n            // 壓縮圖片\n            $image = Image::make($image)\n                ->orientate()\n                // ->resize($resizeWidth, null, function ($constraint) {\n                //     $constraint->aspectRatio();\n                //     $constraint->upsize();\n                // })\n                ->encode('jpg', $quality); // 設定 JPG 格式和品質\n            $image->save($path . $filename);\n\n            return 'images/' . $uploadDir . '/' . $filename;\n        }\n\n        return '';\n    }\n\n    // 共用圖片處理函式\n    function handleImageUpload($newImage, $existingImagePath, $uploadDir, $resizeWidth = 800, $quality = 75)\n    {\n        if ($newImage) {\n            $path = public_path('uploads/images/' . $uploadDir . '/');\n            $filename = time() . '_' . $newImage->getClientOriginalName();\n\n            // 確保目錄存在\n            if (!file_exists($path)) {\n                mkdir($path, 0755, true);\n            }\n\n            // 若已有圖片，刪除舊圖片\n            if (!empty($existingImagePath) && File::exists(public_path('uploads/' . $existingImagePath))) {\n                File::delete(public_path('uploads/' . $existingImagePath));\n            }\n\n            // 壓縮並保存新圖片\n            $image = Image::make($newImage)\n                ->orientate()\n                // ->resize($resizeWidth, null, function ($constraint) {\n                //     $constraint->aspectRatio();\n                //     $constraint->upsize();\n                // })\n                ->encode('jpg', $quality); // 設定 JPG 格式和品質\n            $image->save($path . $filename);\n\n            return 'images/' . $uploadDir . '/' . $filename;\n        }\n\n        // 若無新圖片，返回舊圖片路徑\n        return $existingImagePath;\n    }\n}\n"
        }
    ]
}